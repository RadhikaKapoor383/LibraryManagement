/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package goodread.library;

import java.awt.Color;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ManagePatrons = new javax.swing.JButton();
        ManageBooks = new javax.swing.JButton();
        LogOnt = new javax.swing.JButton();
        ManageEmployees = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.white);

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 75)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(68, 68, 100));
        jLabel2.setText("Welcome to Library Chief Page!");

        ManagePatrons.setBackground(new java.awt.Color(211, 211, 228));
        ManagePatrons.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        ManagePatrons.setForeground(new java.awt.Color(68, 68, 100));
        ManagePatrons.setText("Manage Patrons");
        ManagePatrons.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(68, 68, 100), new java.awt.Color(230, 235, 240), new java.awt.Color(68, 68, 100), new java.awt.Color(68, 68, 100)));
        ManagePatrons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManagePatronsActionPerformed(evt);
            }
        });

        ManageBooks.setBackground(new java.awt.Color(211, 211, 228));
        ManageBooks.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        ManageBooks.setForeground(new java.awt.Color(68, 68, 100));
        ManageBooks.setText("Manage Books");
        ManageBooks.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(68, 68, 100), new java.awt.Color(230, 235, 240), new java.awt.Color(68, 68, 100), new java.awt.Color(68, 68, 100)));
        ManageBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageBooksActionPerformed(evt);
            }
        });

        LogOnt.setBackground(new java.awt.Color(211, 211, 228));
        LogOnt.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        LogOnt.setForeground(new java.awt.Color(68, 68, 100));
        LogOnt.setText("Log out");
        LogOnt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(68, 68, 100), new java.awt.Color(230, 235, 240), new java.awt.Color(68, 68, 100), new java.awt.Color(68, 68, 100)));
        LogOnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOntActionPerformed(evt);
            }
        });

        ManageEmployees.setBackground(new java.awt.Color(211, 211, 228));
        ManageEmployees.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        ManageEmployees.setForeground(new java.awt.Color(68, 68, 100));
        ManageEmployees.setText("Manage Employee");
        ManageEmployees.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(68, 68, 100), new java.awt.Color(230, 235, 240), new java.awt.Color(68, 68, 100), new java.awt.Color(68, 68, 100)));
        ManageEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManageEmployeesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ManageBooks, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ManageEmployees, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LogOnt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ManagePatrons, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(67, 67, 67)
                .addComponent(ManagePatrons, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ManageEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ManageBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LogOnt, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ManagePatronsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManagePatronsActionPerformed
        String URL = "jdbc:mysql://localhost:3306/GoodRead";
        String username = "root";
        String password = "Radhika1@";
        String query = "Select * from Patrons";
        ManagePatrons managePatrons = new ManagePatrons();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }

        try {
            Connection connect = DriverManager.getConnection(URL, username, password);
            PreparedStatement stmt = connect.prepareStatement(query);

            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) managePatrons.ManagePatron.getModel();

            while (rs.next()) {
                Object[] row = {rs.getInt("PatronID"),
                    rs.getString("FirstName"),
                    rs.getString("SecondName"),
                    rs.getString("Email"),
                    rs.getString("Contact"),
                    rs.getString("Address"),
                    rs.getString("BookTitle"),
                    rs.getTimestamp("borrowDate"),
                    rs.getTimestamp("endDate")};

                model.addRow(row);
            }

            managePatrons.show();
            dispose();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_ManagePatronsActionPerformed

    private void ManageBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageBooksActionPerformed
        String URL = "jdbc:mysql://localhost:3306/GoodRead";
        String username = "root";
        String password = "Radhika1@";
        String query = "Select * from books";
        ManageBooks managebooks = new ManageBooks();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }

        try {
            Connection connect = DriverManager.getConnection(URL, username, password);

            PreparedStatement stmt = connect.prepareStatement(query);

            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) managebooks.manageBooks.getModel();

            while (rs.next()) {

                Object[] rowData = new Object[]{
                    rs.getString("BookID"),
                    rs.getString("BookTitle"),
                    rs.getString("Author"),
                    rs.getString("Publisher"),
                    rs.getString("ISBN"),
                    rs.getInt("Year"),
                    rs.getInt("NumberOfBooks"),
                    rs.getString("Status"),
                    rs.getBoolean("Available")
                };

                model.addRow(rowData);
            }
            dispose();
            managebooks.show();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_ManageBooksActionPerformed

    private void LogOntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOntActionPerformed
        MenuPage main = new MenuPage();
        main.show();
        dispose();
    }//GEN-LAST:event_LogOntActionPerformed

    private void ManageEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManageEmployeesActionPerformed
        String URL = "jdbc:mysql://localhost:3306/GoodRead";
        String Username = "root";
        String Password = "Radhika1@";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }

        try {
            Connection connect = DriverManager.getConnection(URL, Username, Password);

            ResultSet rs;

            ManageLibrarian user = new ManageLibrarian();
            PreparedStatement stmt = connect.prepareStatement("Select * from librarian");

            rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) user.librarian.getModel();

            while (rs.next()) {
                Object[] row = {rs.getInt("librarianID"),
                    rs.getString("FirstName"),
                    rs.getString("SecondName"),
                    rs.getString("Email"),
                    rs.getString("Contact"),
                    rs.getString("CNIC"),
                    rs.getString("City"),
                    rs.getString("Address"),
                    rs.getString("Username"),
                    rs.getString("Password")};

                model.addRow(row);
            }

            user.show();
            dispose();

            // ResultSet rs = stmt.executeQuery()
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_ManageEmployeesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogOnt;
    private javax.swing.JButton ManageBooks;
    private javax.swing.JButton ManageEmployees;
    private javax.swing.JButton ManagePatrons;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}

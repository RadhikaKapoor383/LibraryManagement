/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package goodread.library;

import javax.swing.JOptionPane;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.awt.*;
import javax.swing.BorderFactory;
import javax.swing.table.DefaultTableModel;

public class EditPatron extends javax.swing.JFrame {

    /**
     * Creates new form EditPatron
     */
    public EditPatron() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        FirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        LastName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        contactNum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        City = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        EditPatron = new javax.swing.JButton();
        userID = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(230, 235, 240));
        jPanel1.setMinimumSize(new java.awt.Dimension(1410, 732));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 48)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(68, 68, 100));
        jLabel22.setText("Edit New Patrons");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(26, 26, 36));
        jLabel1.setText("Edit First Name :");

        FirstName.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(26, 26, 36));
        jLabel2.setText("Edit Last Name :");

        LastName.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(26, 26, 36));
        jLabel4.setText("Edit Email :");

        email.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        email.setText("username@gmail.com");
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        contactNum.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        contactNum.setText("03XX-XXXXXXX");
        contactNum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contactNumFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactNumFocusLost(evt);
            }
        });
        contactNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactNumActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(26, 26, 36));
        jLabel5.setText("Edit Contact no:");

        jLabel8.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(26, 26, 36));
        jLabel8.setText("Edit City :");

        City.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        City.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CityFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CityFocusLost(evt);
            }
        });
        City.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(26, 26, 36));
        jLabel9.setText("Edit Address :");

        address.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressFocusLost(evt);
            }
        });
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        EditPatron.setBackground(new java.awt.Color(211, 211, 228));
        EditPatron.setFont(new java.awt.Font("DialogInput", 1, 16)); // NOI18N
        EditPatron.setForeground(new java.awt.Color(61, 61, 86));
        EditPatron.setText("Save Changes");
        EditPatron.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), new java.awt.Color(89, 89, 117), new java.awt.Color(204, 204, 255)));
        EditPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPatronActionPerformed(evt);
            }
        });

        userID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userID.setForeground(new java.awt.Color(26, 26, 36));
        userID.setText("User ID :");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(26, 26, 36));
        jLabel21.setText("User ID :");

        jLabel3.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        jLabel3.setText("Book Title:");

        BName.setFont(new java.awt.Font("DialogInput", 0, 18)); // NOI18N
        BName.setText("Book");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel15)
                .addGap(136, 136, 136)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 485, Short.MAX_VALUE)
                        .addComponent(EditPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(625, 625, 625))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel21)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(City)
                            .addComponent(userID)
                            .addComponent(contactNum)
                            .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addComponent(LastName)
                            .addComponent(FirstName)
                            .addComponent(address)
                            .addComponent(BName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addGap(188, 188, 188)
                        .addComponent(EditPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userID)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contactNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(City, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(136, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(375, 375, 375)
                        .addComponent(jLabel22))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel22))
                .addGap(42, 42, 42)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusGained
        if (email.getText().equals("username@gmail.com")) {
            email.setText("");// TODO add your handling code here:
        }
    }//GEN-LAST:event_emailFocusGained

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost
        if (!emailValidator(email.getText())) {
            if (email.getText().equals("")) {
                email.setText("username@gmail.com");// TODO add your handling code here:
            } else {
                JOptionPane.showMessageDialog(this, "Please enter valid email!");
            }
        }
    }//GEN-LAST:event_emailFocusLost

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed

    }//GEN-LAST:event_emailActionPerformed

    private void contactNumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactNumFocusGained
        if (contactNum.getText().equals("03XX-XXXXXXX")) {
            contactNum.setText("");
        }
    }//GEN-LAST:event_contactNumFocusGained

    private void contactNumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactNumFocusLost

        if (!numberValidator(contactNum.getText())) {
            if (contactNum.getText().equals("")) {
                contactNum.setText("03XX-XXXXXXX");
            } else {
                JOptionPane.showMessageDialog(this, "Please enter valid contact number of format 03XX-XXXXXXX!");
            }
        }
    }//GEN-LAST:event_contactNumFocusLost

    private void contactNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactNumActionPerformed

    }//GEN-LAST:event_contactNumActionPerformed

    private void CityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CityFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_CityFocusGained

    private void CityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CityFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_CityFocusLost

    private void CityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityActionPerformed

    private void addressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFocusGained

    private void addressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFocusLost

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void EditPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPatronActionPerformed
        String URL = "jdbc:mysql://localhost:3306/GoodRead";
        String Username = "root";
        String Password = "Radhika1@";
        int USERID = Integer.parseInt(userID.getText());

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }

        try (Connection connect = DriverManager.getConnection(URL, Username, Password)) {
            if (FirstName.getText().equals("") || LastName.getText().equals("") || email.getText().equals("username@gmail.com") || contactNum.getText().equals("03XX-XXXXXXX") || City.getText().equals("") || address.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter data into empty field(s)");
            } else if (!emailValidator(email.getText()) || !numberValidator(contactNum.getText())) {
                if (!emailValidator(email.getText())) {
                    email.setBorder(BorderFactory.createLineBorder(Color.RED));
                }
                if (!numberValidator(contactNum.getText())) {
                    contactNum.setBorder(BorderFactory.createLineBorder(Color.RED));
                }
            } else {
                Boolean hasBorrowedBook = false;
                Timestamp borrowDate = null;
                Timestamp endDate = null;

                // Check if the patron has borrowed a book
                String query = "SELECT BorrowDate, EndDate FROM books WHERE PatronID = ?";
                try (PreparedStatement statement = connect.prepareStatement(query)) {
                    statement.setInt(1, USERID);
                    try (ResultSet rs = statement.executeQuery()) {
                        if (rs.next()) {
                            hasBorrowedBook = true;
                            borrowDate = rs.getTimestamp("BorrowDate");
                            endDate = rs.getTimestamp("EndDate");
                        }
                    }
                }

                if (hasBorrowedBook) {
                    // Check if the book is overdue (14 days period)
                    if (endDate != null && endDate.before(new Timestamp(System.currentTimeMillis()))) {
                        JOptionPane.showMessageDialog(this, "Cannot make changes to profile while a book is overdue!");
                        return;
                    }

                    // Optionally update the endDate for the book
                    // You might want to include logic to handle if the book was returned or extend the endDate.
                }

                // Update Patron's Profile
                String updateQuery = "UPDATE patron SET FirstName = ?, LastName = ?, Email = ?, ContactNum = ?, City = ?, Address = ? WHERE PatronID = ?";
                try (PreparedStatement updateStatement = connect.prepareStatement(updateQuery)) {
                    updateStatement.setString(1, FirstName.getText());
                    updateStatement.setString(2, LastName.getText());
                    updateStatement.setString(3, email.getText());
                    updateStatement.setString(4, contactNum.getText());
                    updateStatement.setString(5, City.getText());
                    updateStatement.setString(6, address.getText());
                    updateStatement.setInt(7, USERID);
                    updateStatement.executeUpdate();
                }

                JOptionPane.showMessageDialog(this, "Information has been updated");

                dispose();
                ManagePatrons patron = new ManagePatrons();
                patron.show();
                dispose();
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_EditPatronActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String URL = "jdbc:mysql://localhost:3306/GoodRead";
        String username = "root";
        String password = "Radhika1@";
        String query = "Select * from Patrons";
        ManagePatronsLib managePatrons = new ManagePatronsLib();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println(e.getMessage());
        }

        try {
            Connection connect = DriverManager.getConnection(URL, username, password);
            PreparedStatement stmt = connect.prepareStatement(query);

            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) managePatrons.ManagePatron.getModel();

            while (rs.next()) {
                Object[] row = {rs.getInt("PatronID"),
                    rs.getString("FirstName"),
                    rs.getString("SecondName"),
                    rs.getString("Email"),
                    rs.getString("Contact"),
                    rs.getString("Address"),
                    rs.getString("BookTitle"),
                    rs.getTimestamp("borrowDate"),
                    rs.getTimestamp("endDate")};

                model.addRow(row);
            }

            managePatrons.show();
            dispose();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean emailValidator(String pass) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@gmail.com";
        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(email.getText());
        return matcher.matches();
    }

    private boolean numberValidator(String pass) {
        String regex = "^03\\d{2}-?\\d{7}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(contactNum.getText());
        return matcher.matches();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditPatron.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditPatron.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditPatron.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditPatron.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditPatron().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel BName;
    public javax.swing.JTextField City;
    private javax.swing.JButton EditPatron;
    public javax.swing.JTextField FirstName;
    public javax.swing.JTextField LastName;
    public javax.swing.JTextField address;
    public javax.swing.JTextField contactNum;
    public javax.swing.JTextField email;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JLabel userID;
    // End of variables declaration//GEN-END:variables
}
